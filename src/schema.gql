# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Users {
  id: Int!
  created_at: DateTime!
  updated_at: DateTime!
  username: String!
  bio: String!
  number: String!
  email: String!
  password: String!
  status: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Posts {
  id: Int!
  created_at: DateTime!
  updated_at: DateTime!
  user: Users!
  caption: String!
  iat: Float!
  lng: Float!
  likescount: Int!
  commentCount: Int!
}

type PaginatedPosts {
  items: [Posts!]!
  totalCount: Int!
}

type Comments {
  id: Int!
  created_at: DateTime!
  updated_at: DateTime!
  content: String!
  user_id: Int!
  post: Posts!
  likesCount: Float!
}

type PhotoTags {
  id: Float!
  created_at: DateTime!
  update_at: DateTime!
  post: Posts!
  user: Users!
  x: Float!
  y: Float!
}

type CaptionTags {
  id: Float!
  created_at: DateTime!
  user: Users!
  post: Posts!
}

type Hashtag {
  id: Float!
  created_at: DateTime!
  title: String!
}

type HashTagPosts {
  id: Float!
  hashTag: Hashtag!
  post: Posts!
}

type Followers {
  id: Float!
  leader_id: Float!
  follower_id: Float!
}

type Query {
  hello: String!
  findUser(userId: Int!): Users!
  findPost(findPost: Float!): Posts!
  findAllPost(pagination: Pageination!): PaginatedPosts!
  findComment(commentId: Float!): Comments!
  getphotoTags(postId: Float!): [PhotoTags!]!
  getpostCaptioTag(postCaptionTagPostID: Float!): [CaptionTags!]!
  findHastag(id: Float!): Hashtag!
  countFolllowers(countFollowersDto: Float!): Float!
}

input Pageination {
  page: Float!
  limit: Float!
}

type Mutation {
  createUser(createUser: CreateUserDto!): Users!
  createPost(createPost: CreatePostDto!): Posts!
  setREdisValue(keyAndValue: setRedisDto!): String!
  createComment(createCommentinput: CreateCommentInput!): Comments!
  deleteComment(deleteCommentDto: DeleteCommentDto!): String!
  createLike(likeDto: LikeDto!): String!
  dislike(dislike: LikeDto!): String!
  createPhotoTags(tagsDto: PhotoTagsDto!): PhotoTags!
  createCaptionTag(captionTagDto: CaptionTagsDto!): CaptionTags!
  deleteCaptioTag(captionTagId: Float!): String!
  CreateHastag(title: HashtagDto!): Hashtag!
  deleteHashtag(id: Float!): String!
  create_HashTagPost(hashTagPostDto: Hashtag_postDto!): HashTagPosts!
  follow(followDto: followerDto!): Followers!
  unFollow(unFollowDto: followerDto!): String!
  writeToFirebase: Boolean!
  login(login: LoginDto!): String!
  sendOtp(email: String!, name: String!): String!
  verfication(otp: resetPasswordDto!): String!
  logout: String!
  sendemail(seendEmailDto: String!): String!
}

input CreateUserDto {
  username: String!
  bio: String!
  number: String!
  email: String!
  password: String!
  status: String!
}

input CreatePostDto {
  user: Int!
  caption: String
  iat: Float!
  lng: Float!
}

input setRedisDto {
  key: String!
  value: String!
}

input CreateCommentInput {
  content: String!
  userId: Int!
  postId: Int!
}

input DeleteCommentDto {
  post_id: Int!
  comment_id: Int!
  user_id: Int!
}

input LikeDto {
  target: String!
  user_id: Int!
  post_id: Int
  comment_id: Int
}

input PhotoTagsDto {
  postId: Float!
  userId: Float!
  x: Float!
  y: Float!
}

input CaptionTagsDto {
  postID: Float!
  userID: Float!
}

input HashtagDto {
  title: String!
}

input Hashtag_postDto {
  hashtag_id: Float!
  post_id: Float!
}

input followerDto {
  leader_id: Float!
  follower_id: Float!
}

input LoginDto {
  email: String!
  password: String!
}

input resetPasswordDto {
  email: String!
  otp: String!
  newPassword: String!
}